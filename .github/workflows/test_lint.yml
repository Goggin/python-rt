name: Run tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      rt:
        image: netsandbox/request-tracker:5.0
        ports:
          - 8080:8080
        env:
          RT_WEB_PORT: 8080

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[test]

      - name: Test with pytest
        run: |
          python -m pytest -v tests


  coverage:
    name: Combine & check coverage.
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip coverage[toml]
          python -m pip install -e .[test]

      - name: Generate coverage data
        run: |
          python -m coverage run --omit tests --parallel-mode -m pytest tests

      - name: Combine coverage & create xml report
        run: |
          python -m coverage combine
          python -m coverage xml

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}


  lint_python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - run: python -m pip install --upgrade pip wheel
      - run: python -m pip install -e .[dev]

      - name: mypy
        run: mypy --config-file pyproject.toml rt

      - name: bandit
        run: bandit -r rt

      - name: codespell
        run: codespell --ignore-words=.codespell_ignore rt
